syntax = "proto3";

option go_package = "mapreduce/mapreduce";

package mapreduce;

// MapReduce Service
service MapReduce {
  // Retrieve a chunk for processing
  rpc GetChunk (NodeName) returns (Chunk);

  // Send an ordered chunk
  rpc SendChunk (Chunk) returns (Ack);

  // Requires a range-based partition of a reducer
  rpc GetPartition (ReducerRequest) returns (Partition);
}

// Data of a chunk to be processed
message Chunk {
  repeated int32 data = 1; // List of integers
}

// Ordered data of a partition
message Partition {
  repeated int32 sorted_data = 1; // Ordered data
}

// Confirmation Message
message Ack {
  string message = 1; // Confirmation Message
}

// Node name
message NodeName {
  string name = 1; // Node name mapper/reducer
}

// Requesting a reducer
message ReducerRequest {
  string name = 1;    // Name of reducer
  int32 min_range = 2; // Gamma minima
  int32 max_range = 3; // Maximum range
}

