// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: mapreduce/reducer.proto

package reducer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Ordered data of a partition
type Partition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node       *NodeName `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	SortedData []int32   `protobuf:"varint,2,rep,packed,name=sorted_data,json=sortedData,proto3" json:"sorted_data,omitempty"` // Ordered data
}

func (x *Partition) Reset() {
	*x = Partition{}
	mi := &file_mapreduce_reducer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partition) ProtoMessage() {}

func (x *Partition) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_reducer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partition.ProtoReflect.Descriptor instead.
func (*Partition) Descriptor() ([]byte, []int) {
	return file_mapreduce_reducer_proto_rawDescGZIP(), []int{0}
}

func (x *Partition) GetNode() *NodeName {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *Partition) GetSortedData() []int32 {
	if x != nil {
		return x.SortedData
	}
	return nil
}

// Confirmation Message
type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Confirmation Message
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_mapreduce_reducer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_reducer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_mapreduce_reducer_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Node name
type NodeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // Node name mapper/reducer
	NumMapper int32  `protobuf:"varint,2,opt,name=num_mapper,json=numMapper,proto3" json:"num_mapper,omitempty"` // Num of mapper
}

func (x *NodeName) Reset() {
	*x = NodeName{}
	mi := &file_mapreduce_reducer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeName) ProtoMessage() {}

func (x *NodeName) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_reducer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeName.ProtoReflect.Descriptor instead.
func (*NodeName) Descriptor() ([]byte, []int) {
	return file_mapreduce_reducer_proto_rawDescGZIP(), []int{2}
}

func (x *NodeName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeName) GetNumMapper() int32 {
	if x != nil {
		return x.NumMapper
	}
	return 0
}

// Requesting a reducer
type ReducerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                          // Name of reducer
	MinRange int32  `protobuf:"varint,2,opt,name=min_range,json=minRange,proto3" json:"min_range,omitempty"` // Minimum range
	MaxRange int32  `protobuf:"varint,3,opt,name=max_range,json=maxRange,proto3" json:"max_range,omitempty"` // Maximum range
}

func (x *ReducerRequest) Reset() {
	*x = ReducerRequest{}
	mi := &file_mapreduce_reducer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducerRequest) ProtoMessage() {}

func (x *ReducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_reducer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducerRequest.ProtoReflect.Descriptor instead.
func (*ReducerRequest) Descriptor() ([]byte, []int) {
	return file_mapreduce_reducer_proto_rawDescGZIP(), []int{3}
}

func (x *ReducerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReducerRequest) GetMinRange() int32 {
	if x != nil {
		return x.MinRange
	}
	return 0
}

func (x *ReducerRequest) GetMaxRange() int32 {
	if x != nil {
		return x.MaxRange
	}
	return 0
}

var File_mapreduce_reducer_proto protoreflect.FileDescriptor

var file_mapreduce_reducer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x61, 0x70, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x09,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1f, 0x0a, 0x03, 0x41,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x08,
	0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x0e, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x9e, 0x01, 0x0a, 0x09,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x70,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b,
	0x12, 0x4a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6d,
	0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x70, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x13, 0x5a, 0x11,
	0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mapreduce_reducer_proto_rawDescOnce sync.Once
	file_mapreduce_reducer_proto_rawDescData = file_mapreduce_reducer_proto_rawDesc
)

func file_mapreduce_reducer_proto_rawDescGZIP() []byte {
	file_mapreduce_reducer_proto_rawDescOnce.Do(func() {
		file_mapreduce_reducer_proto_rawDescData = protoimpl.X.CompressGZIP(file_mapreduce_reducer_proto_rawDescData)
	})
	return file_mapreduce_reducer_proto_rawDescData
}

var file_mapreduce_reducer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mapreduce_reducer_proto_goTypes = []any{
	(*Partition)(nil),      // 0: mapreduce.reducer.Partition
	(*Ack)(nil),            // 1: mapreduce.reducer.Ack
	(*NodeName)(nil),       // 2: mapreduce.reducer.NodeName
	(*ReducerRequest)(nil), // 3: mapreduce.reducer.ReducerRequest
}
var file_mapreduce_reducer_proto_depIdxs = []int32{
	2, // 0: mapreduce.reducer.Partition.node:type_name -> mapreduce.reducer.NodeName
	0, // 1: mapreduce.reducer.MapReduce.SendPartition:input_type -> mapreduce.reducer.Partition
	2, // 2: mapreduce.reducer.MapReduce.GetRange:input_type -> mapreduce.reducer.NodeName
	1, // 3: mapreduce.reducer.MapReduce.SendPartition:output_type -> mapreduce.reducer.Ack
	3, // 4: mapreduce.reducer.MapReduce.GetRange:output_type -> mapreduce.reducer.ReducerRequest
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mapreduce_reducer_proto_init() }
func file_mapreduce_reducer_proto_init() {
	if File_mapreduce_reducer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapreduce_reducer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapreduce_reducer_proto_goTypes,
		DependencyIndexes: file_mapreduce_reducer_proto_depIdxs,
		MessageInfos:      file_mapreduce_reducer_proto_msgTypes,
	}.Build()
	File_mapreduce_reducer_proto = out.File
	file_mapreduce_reducer_proto_rawDesc = nil
	file_mapreduce_reducer_proto_goTypes = nil
	file_mapreduce_reducer_proto_depIdxs = nil
}
