syntax = "proto3";

option go_package = "mapreduce/reducer";

package mapreduce.reducer;

// MapReduce Service
service MapReduce {
  // Send an ordered chunk
  rpc SendPartition (Partition) returns (Ack);

  // Requires a range-based partition of a reducer
  rpc GetRange (NodeName) returns (ReducerRequest);
}

// Ordered data of a partition
message Partition {
  NodeName node = 1;
  repeated int32 sorted_data = 2; // Ordered data
}

// Confirmation Message
message Ack {
  string message = 1; // Confirmation Message
}

// Node name
message NodeName {
  string name = 1; // Node name mapper/reducer
  int32 num_mapper = 2; // Num of mapper
}

// Requesting a reducer
message ReducerRequest {
  string name = 1;    // Name of reducer
  int32 min_range = 2; // Minimum range
  int32 max_range = 3; // Maximum range
}

